## general
server.port=8081
#logging.file.name=kafka-log-data-consumer
server.error.include-message=always
#logging.level.root=INFO

## kafka properties
spring.kafka.group.id=syslog-kafka
spring.kafka.application.id=syslog-kafka-consumer
spring.kafka.bootstrap.servers=localhost:9092
spring.kafka.input.topics=failed-login-data,success-login-data

## DATA SOURCE
# Set here configurations for the database connection
spring.datasource.url=jdbc:mariadb://localhost:3306/syslogdb
spring.datasource.username=user
spring.datasource.password=user
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

## JPA / HIBERNATE
# Show or not log for each sql query
spring.jpa.show-sql=false
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
##pi: ddl-auto: update
# Naming strategy
spring.jpa.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
